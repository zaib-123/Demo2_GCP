name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install --upgrade Flask


      - name: Test Application
        run: |
          
          export FLASK_RUN_PORT=8080
          export FLASK_RUN_HOST=127.0.0.1
          python -c "import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.bind(('127.0.0.1', 8080))"
          echo "Port 8080 is available"



  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install --upgrade Flask
      - name: Deploy Application
        run: |
          export FLASK_RUN_PORT=8080
          export FLASK_RUN_HOST=127.0.0.1
          python main.py --host 127.0.0.1 --port 8080 &  # Run Flask app in background
          sleep 5  # Wait for Flask app to start (adjust time as needed)
          pkill -SIGINT -f "python main.py"  # Send SIGINT signal to stop Flask app
